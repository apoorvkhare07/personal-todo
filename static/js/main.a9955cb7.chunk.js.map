{"version":3,"sources":["Table.js","Form.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","checked","key","style","textDecoration","task","type","onChange","handleCheck","onClick","removeCharacter","Table","Form","initialState","state","handleChange","event","target","name","value","setState","onFormSubmit","preventDefault","handleSubmit","this","onSubmit","for","id","Component","App","characters","filter","character","i","updateStorage","console","log","localStorage","setItem","JSON","stringify","data","getItem","parse","length","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a9955cb7.chunk.js","sourcesContent":["import React from 'react'\n\nconst TableHeader = () => {\n    return (\n        <thead>\n            <tr>\n                <th>Task</th>\n                <th>Completed</th>\n\n            </tr>\n        </thead>\n    );\n}\n\nconst TableBody = props => {\n    const rows = props.characterData.map((row, index) => {\n        if(row.checked){\n            return (\n                <tr key={index}>\n                        <td style={{textDecoration: \"line-through\"}} >{row.task}</td>\n                        <td> <input type=\"checkbox\"\n                                checked={row.checked}\n                                onChange={() => props.handleCheck(index)}\n                                />\n\n                        </td>\n                        <td>\n                            <button onClick={() => props.removeCharacter(index)}>Delete</button>\n                        </td>\n                </tr>\n            );\n        }\n        else{\n            return (\n                <tr key={index}>\n                        <td>{row.task}</td>\n                        <td> <input type=\"checkbox\"\n                                checked={row.checked}\n                                onChange={() => props.handleCheck(index)}\n                                />\n\n                        </td>\n                        <td>\n                            <button onClick={() => props.removeCharacter(index)}>Delete</button>\n                        </td>\n                </tr>\n            );\n        }\n    });\n\n    return <tbody>{rows}</tbody>;\n}\n\nconst Table = (props) => {\n    const { characterData, removeCharacter, handleCheck } = props;\n        return (\n            <table>\n                <TableHeader />\n                <TableBody characterData={characterData} removeCharacter={removeCharacter} handleCheck={handleCheck} />\n            </table>\n        );\n}\n\nexport default Table;","import React, {Component} from 'react';\n\nclass Form extends Component {\n        initialState = {\n            task: '',\n            checked: false\n        };\n\n        state = this.initialState;\n\n\n    handleChange = event => {\n        const { name, value } = event.target;\n\n        this.setState({\n            [name] : value\n        });\n    }\n\n    onFormSubmit = (event) => {\n        event.preventDefault();\n\n        this.props.handleSubmit(this.state);\n        this.setState(this.initialState);\n    }\n\n    render() {\n        const { task } = this.state;\n\n        return (\n            <form onSubmit={this.onFormSubmit}>\n                <label for=\"task\">Task</label>\n                <input\n                    type=\"text\"\n                    name=\"task\"\n                    id=\"task\"\n                    value={task}\n                    onChange={this.handleChange} />\n                <button type=\"submit\">\n                    Add\n                </button>\n            </form>\n        );\n    }\n}\n\nexport default Form;","import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport Table from './Table'\nimport Form from './Form'\nimport './index.css'\n\nclass App extends Component {\n    state = {\n        characters: []\n    };\n\n    componentWillMount (){\n        let data =[] ;\n\n        if (localStorage.getItem('items')) {\n            data = JSON.parse(localStorage.getItem('items'))\n            data = data.characters\n          } else {\n            data = []\n          }\n          console.log(data);\n        for ( let i =0; i<data.length; i++){\n            this.setState(state => ({\n                characters: [...state.characters, data[i]]\n              }))\n        }\n    }\n\n    removeCharacter = index => {\n        const { characters } = this.state;\n\n        this.setState({\n            characters: characters.filter((character, i) => {\n                return i !== index;\n            })}, () => this.updateStorage() );\n    }\n\n    handleSubmit = character => {\n        console.log(this.state, character);\n\n        this.setState({characters: [...this.state.characters, character]}, () => this.updateStorage() );\n\n    }\n\n    handleCheck = (index) => {\n        const { characters } = this.state;\n\n        this.setState({\n            characters: characters.filter((character, i) => {\n                if(i == index)\n                    character.checked = !character.checked;\n\n                return character;\n            })\n        }, () => this.updateStorage() );\n\n    }\n\n    updateStorage = () => {\n        localStorage.setItem('items', JSON.stringify(this.state));\n    }\n\n    render() {\n        const { characters } = this.state;\n        return (\n            <div className=\"container\">\n                <h1>Todo-App</h1>\n                <p>Add a task </p>\n                <Table\n                    characterData={characters}\n                    removeCharacter={this.removeCharacter}\n                    handleCheck = {this.handleCheck}\n                />\n                <h3>Add New</h3>\n                <Form handleSubmit={this.handleSubmit} />\n            </div>\n        );\n    }\n}\n\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}